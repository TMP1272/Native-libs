name: Build & Optimize Native .so

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-native:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3

    - name: üì¶ Setup Android NDK
      id: setup-ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r28c

    - name: üõ†Ô∏è Build native library (.so)
      run: |
        cd Native-Build/Src/Jni/SecretsVault
        ndk-build NDK_PROJECT_PATH=. \
          APP_BUILD_SCRIPT=Android.mk \
          NDK_APPLICATION_MK=Application.mk \
          NDK_TOOLCHAIN_VERSION=clang

    - name: üì• Copy libc++_shared.so from NDK
      run: |
        ABI_LIST="arm64-v8a armeabi-v7a"
        for ABI in $ABI_LIST; do
          SRC="$ANDROID_NDK/sources/cxx-stl/llvm-libc++/libs/$ABI/libc++_shared.so"
          DEST="Native-Build/Src/Jni/SecretsVault/obj/local/$ABI/"
          mkdir -p "$DEST"
          cp "$SRC" "$DEST"
          echo "Copied $SRC to $DEST"
        done

    - name: üî™ Strip symbols to reduce size
      run: |
        find Native-Build/Src/Jni/SecretsVault/obj/local -name "*.so" | while read sofile; do
          echo "Stripping $sofile"
          $ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip "$sofile"
        done

    - name: üì§ Upload .so files as artifact
      uses: actions/upload-artifact@v4
      with:
        name: native-libs
        path: Native-Build/Src/Jni/SecretsVault/obj/local/**/*.so
